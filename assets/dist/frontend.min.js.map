{"version":3,"sources":["../js/frontend.js"],"names":["jQuery","document","ready","$","fetchPosts","filters","paged","xhr","ajax","url","aasf","ajaxurl","type","data","action","aasfNonce","isCategory","beforeSend","loaderShow","success","readyState","html","loaderHide","bindUI","error","err","$container","sendRequest","page","params","getQueryParams","searchValue","val","hasOwnProperty","cancelSubmisson","evt","preventDefault","stopPropagation","stopImmediatePropagation","bindSearchFilterMenu","click","li","this","closest","ul","find","label","toggle","is","removeClass","addClass","cueRequest","_","debounce","change","getFiltersFromInputs","$link","target","$links","terms","getFiltersFromAttr","$el","attr","match","length","getFiltersFromUrl","cat","location","pathname","split","arr","filter","item","trim","push","term","taxonomies","each","taxonomy","$inputs","input","i","search","substr","c","q","toString","addLoadingAnimation","$loaderHolder","append","css","$loader","show","hide","init","parent"],"mappings":"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","file":"frontend.min.js","sourcesContent":["jQuery(document).ready(function($) {\n    'use strict';\n \n    var data = {},\n        opts = {\n            'container': 'content',\n            'itemSelector' : 'article'\n        },\n        xhr = null,\n        cueRequest = null,  // local variable?\n        filters = null,\n        $container, $loader,\n        $loaderHolder = $( '.content' ).parent(); // element to which to attach loading animation\n\n    function fetchPosts ( filters, paged ) {\n        xhr = $.ajax({\n\t        url: aasf.ajaxurl,\n            type: 'post',\n\t        data: {\n\t            action : 'find-posts',\n                aasfNonce : aasf.aasfNonce,\n                isCategory: aasf.isCategory,\n\t            filters : filters,\n                paged: paged\n\t        },\n            beforeSend: function () {\n                loaderShow();\n                // disable checkboxes??\n                //$(document).scrollTop();\n            },\n\t        success:function( data ) {\n                // if xhr still executing due to multiple clicks do not update until last req is complete\n                if( xhr.readyState == 4 ) {\n                    $('.content').html( data );\n                    loaderHide();\n                    bindUI();  // need to verify whether listeners are reemoved with DOM el\n                }\n\t        },\n\t        error: function( err ) {\n\t            $container.html( '<p>There has been an error</p>' );\n                loaderHide();\n\t        }\n\t    });  \n    }\n\n    // TODO: cache jQuery references\n    function cacheElements() { \n\n    }\n\n    function sendRequest( filters, page ) {\n        var params = getQueryParams(),\n            searchValue = $('input[type=\"search\"]').val();\n        \n        if( params && params.hasOwnProperty(\"s\") ) {\n            filters['s'] = ( searchValue ) ? searchValue : params['s'];\n        }\n\n        fetchPosts ( filters, page );\n    }\n\n    function cancelSubmisson( evt ) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        evt.stopImmediatePropagation();\n    }\n\n    function bindSearchFilterMenu () {\n\n        $( '.aasf-trigger' ).click( function( evt ) {\n            var li = $(this).closest('li'),\n                ul = li.find( 'ul' ),\n                label = $(this).find( 'div' );\n\n            ul.toggle();\n            if(  ul.is(':visible') ) {\n                label.removeClass('aasf-left');\n                label.addClass('aasf-down');\n            } else {\n                label.removeClass('aasf-down');\n                label.addClass('aasf-left');\n            }\n        }); \n\n    }\n\n    function bindUI () {\n\n        if( !cueRequest ) {\n            cueRequest = _.debounce( function( filters, page ) {  \n                sendRequest( filters, page );\n            }, 500);\n        }\n\n        $( '.aasf-field input' ).change( function() {\n            cueRequest( getFiltersFromInputs(), 1 );\n        });\n\n    \t// $( '.aasf-field input' ).change( function( evt ) {\n     //        //$els = $( '#aasf-filter input' );\n     //        // update classes to reflect current selections??\n     //        //filterArticles( getClassesFromInputsToFilterOn($els), filterWithClasses );\n     //        //var cls = getClassesFromInputsToFilterOn( $els );\n\n     //        //sendRequest();\n\n     //        //console.dir(cls);\n     //        // fetchPosts();\n          \n     //        // trigger ajax call\n    \t// });\n\n    \t$( '.aasf-tax-term a' ).click( function ( evt ) {\n            cancelSubmisson ( evt );\n\n            // set active state on clicked link\n            var $link = $(evt.target),\n                $links = $( 'a[data-terms]' ), \n                terms  = $link.data( \"terms\" );\n            \n            $links = $( 'a[data-terms]' ).removeClass('active-filter');\n            $link.addClass('active-filter');\n\n            cueRequest( getFiltersFromAttr(terms), 1 );\n\n            // update classes to reflect current selections\n            // filterArticles( getClassesFromLinkToFilterOn( $(this) ), filterWithClasses );\n\n            // trigger ajax call \n    \t});\n\n        $( '.pages-filter a.page-numbers' ).click( function( evt ) {\n            cancelSubmisson ( evt );\n            \n            var url = $(evt.target).attr('href'),\n                page = url.match(/\\/page\\/(\\d+)\\//),  // assumes /page/ format and not &paged=\n                $el,\n                terms, filters;\n\n            // this is not a scalable way to do this\n            // if .active-filter is present, assume taxonomy links \n            $el = $( '.active-filter' );\n           \n            if( $el.length ) { \n                filters = getFiltersFromAttr( $el.data( \"terms\" ) );\n            } \n            \n            // if .aasf-tax-terms is present, assume taxonomy inputs \n            else if( $('.aasf-tax-terms').length ) {\n                filters = getFiltersFromInputs();\n            \n            // assume there are no filters present, need to figure out query from url\n            } else {\n                 filters = getFiltersFromUrl();\n            }\n            \n            page = ( page ) ? page[1] : 1;\n            cueRequest( filters, page );    \n\n            // filterArticles( getClassesFromLinkToFilterOn( $(this) ), filterWithClasses );\n           \n        });\n\n        // stop default form submission?    http://publications.america.dev/page/2/?s\n    }\n\n    function getFiltersFromUrl() {\n        var filters = {},\n            cat = location.pathname.split('/'), \n            arr =  cat.filter( function(item) {\n                return item.trim() !== '';\n            });\n\n        filters[arr[0]] = [];\n        filters[arr[0]].push(arr[1]);\n\n        return filters;\n    }\n\n    function getFiltersFromAttr( terms ) {\n        var filters = {},\n            taxonomies = terms.split( ',' ),\n            term;\n\n        _.each( taxonomies, function( taxonomy ) {\n            term = taxonomy.split('__');\n\n            if( !filters[term[0]] ) {\n                filters[term[0]] = [];\n            }\n            filters[term[0]].push(term[1]);\n        });\n       \n        return filters;\n    }\n\n    function getFiltersFromInputs() {\n        var filters = {};\n        var $inputs = $( '.aasf-field input:checked' );\n       \n        _.each( $inputs, function( input ) {     // need to handle urls as well\n            var taxonomy = $(input).attr('rel'); \n            var term =  $(input).val();\n\n            if( !filters[taxonomy] ) {\n                filters[taxonomy] = [];\n            }\n            filters[taxonomy].push( term );\n        });\n\n        return filters;\n    }\n\n    function getQueryParams() {\n        var params = {}, i;\n        \n        $.each( document.location.search.substr(1).split('&'), function( c, q ) {\n            if( q ) {\n                i = q.split('=');\n                params[i[0].toString()] = i[1].toString();\n            }\n        });\n\n        return params;\n    }\n\n    function initializeFilter () {\n        opts = _.extend( opts, aasf );\n\n        $container = $( opts.container ).isotope({\n            itemSelector: opts.itemSelector,\n            layoutMode: 'fitRows'\n        });\n\n        // give images time to load for proper layout\n        $container.imagesLoaded().progress( function() {\n          $container.isotope( 'layout' );\n        });\n    }\n\n    function filterArticles( classes, filterFn ) {\n        var filter = filterFn;\n        $container.isotope({ \n            filter: function () {\n                return filter( $(this), classes );\n            }\n        });\n    }\n\n    function filterWithClasses( el, collection ) {\n        var flag = true,\n            cls;\n         \n        if( collection ) {\n            cls = el.attr( 'class' ).split( /\\s+/ );\n\n            $.each( collection, function( index, col ) {  // use regular expression\n                if( !(_.contains( cls, col)) ) {\n                    flag = false;\n                }\n            });\n        } \n        return flag;\n    }\n    \n    function getClassesFromInputsToFilterOn ( $els ) {\n        var cls, el, tax,\n            showCls = [];\n       \n        $.each( $els, function( index, cb ) {\n            el =  $( cb );\n            tax =  el.attr('name').replace('[]', '');\n            cls = tax + '-' + el.val();\n            if( el.is(':checked') ) {\n                showCls.push( cls );            \n            } \n        });\n\n        return ( showCls.length ) ? showCls : null;\n    }\n\n    function getClassesFromLinkToFilterOn ( $el ) {\n        var showCls = $el.data( 'terms' ).split( ',' ); \n        return ( showCls.length ) ? showCls : null;\n    }\n\n\n    function addLoadingAnimation() {\n        $loaderHolder.append( '<div class=\"cssloader\"><i></i><i></i><i></i></div>' );\n        $loaderHolder.css( ' position', 'relative');\n\n        $loader = $( '.cssloader' );\n        loaderHide();\n    }\n\n    function loaderShow() {\n        $( 'main' ).addClass( 'overlay' );\n      \n        //$loader.css( 'top', window.scrollY + 'px' );\n        $loader.show();\n    }\n\n    function loaderHide() {\n        $( 'main' ).removeClass( 'overlay' );\n        $loader.hide();\n    }\n\n    function init() {\n        bindUI();\n        bindSearchFilterMenu();\n        addLoadingAnimation();\n        //initializeFilter();  // sent from wp via localize_script\n    }\n\n    init();\n\n    //fetchPosts();  // this script should be loaded on localize\n              \n});\n"]}